"""Initial migration - create pattern tables

Revision ID: 3f5dca560d2e
Revises: 
Create Date: 2025-04-29 21:29:19.883997

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3f5dca560d2e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patterns',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('REGEX', 'FUZZY', 'CONTEXT', 'LEARNED', name='patterntype'), nullable=True),
    sa.Column('expression', sa.String(), nullable=False),
    sa.Column('feature_type', sa.String(), nullable=False),
    sa.Column('industry', sa.String(), nullable=False),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('confidence_value', sa.Float(), nullable=True),
    sa.Column('confidence_factors', sa.JSON(), nullable=True),
    sa.Column('pattern_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pattern_examples',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pattern_id', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pattern_id'], ['patterns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pattern_matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pattern_id', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('start', sa.Integer(), nullable=False),
    sa.Column('end', sa.Integer(), nullable=False),
    sa.Column('match_type', sa.Enum('EXACT', 'PARTIAL', 'CONTEXTUAL', 'INFERRED', name='matchtype'), nullable=True),
    sa.Column('confidence_value', sa.Float(), nullable=True),
    sa.Column('confidence_factors', sa.JSON(), nullable=True),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pattern_id'], ['patterns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pattern_validations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pattern_id', sa.String(), nullable=False),
    sa.Column('true_positives', sa.Integer(), nullable=True),
    sa.Column('false_positives', sa.Integer(), nullable=True),
    sa.Column('true_negatives', sa.Integer(), nullable=True),
    sa.Column('false_negatives', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pattern_id'], ['patterns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pattern_validations')
    op.drop_table('pattern_matches')
    op.drop_table('pattern_examples')
    op.drop_table('patterns')
    # ### end Alembic commands ###
